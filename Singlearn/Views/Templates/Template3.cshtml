@model Singlearn.ViewModels.SubjectViewModel

<!DOCTYPE html>
<html>
<head>
    <title>Template 3</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .card {
            margin-bottom: 20px;
        }

        .card-hover-effect {
            overflow: hidden;
            position: relative;
            border-radius: 0.5rem;
            transition: transform 0.25s ease-in-out;
        }

            .card-hover-effect:hover {
                transform: scale(1.05);
                box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            }

        .padding-bottom-20 {
            padding-bottom: 20px;
        }

        .announcement-item {
            margin-bottom: 30px;
            border-bottom: 1px solid black;
            padding-bottom: 15px;
        }

            .announcement-item img {
                width: 200px;
                height: 150px;
                object-fit: cover;
                margin-top: 10px;
            }

        .announcement-meta {
            font-size: 0.9rem;
            color: gray;
        }

        .announcement-description {
            color: black;
        }

        .chapter-card {
            width: 150px;
            height: 100px;
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 10px;
        }

        .chapter-card-title {
            font-size: 0.9rem;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h2 class="text-success">@ViewData["SubjectName"] - @Model.class_id</h2>
        <div class="row mt-3">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Subject Announcements</h5>
                        <div id="announcement-container">
                            @if (Model.Announcements != null && Model.Announcements.Any())
                            {
                                <div class="announcement-item">
                                    <h4>@Model.Announcements.First().title</h4>
                                    <p class="announcement-meta">
                                        @ViewData["StaffName"] posted on @Model.Announcements.First().date.ToString("MMMM dd, yyyy h:mm tt")
                                    </p>
                                    <p class="announcement-description">@Model.Announcements.First().description</p>
                                    @if (!string.IsNullOrEmpty(Model.Announcements.First().image))
                                    {
                                        <img src="@Model.Announcements.First().image" />
                                    }
                                </div>
                            }
                            else
                            {
                                <p>No announcements available.</p>
                            }
                        </div>
                        @if (Model.Announcements != null && Model.Announcements.Count > 3)
                        {
                            <nav aria-label="Announcements navigation">
                                <ul class="pagination justify-content-center">
                                    <li class="page-item">
                                        <a class="page-link" href="#" aria-label="Previous" id="previousPage">
                                            <span aria-hidden="true">&laquo;</span>
                                        </a>
                                    </li>
                                    <li class="page-item">
                                        <a class="page-link" href="#" aria-label="Next" id="nextPage">
                                            <span aria-hidden="true">&raquo;</span>
                                        </a>
                                    </li>
                                </ul>
                            </nav>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Subject Chapters</h5>
                        <div class="row">
                            @if (Model.Chapters != null && Model.Chapters.Any())
                            {
                                <div class="row">
                                    @foreach (var chapter in Model.Chapters)
                                    {
                                        <div class="col-md-6 col-lg-4 padding-bottom-20">
                                            <a asp-controller="Staff" asp-action="MaterialsBySubject" asp-route-subject_id="@chapter.subject_id" asp-route-chapter_id="@chapter.chapter_id" asp-route-class_id="@ViewData["ClassId"]" class="card-link">
                                                <div class="card mb-2 card-hover-effect chapter-card">
                                                    <div class="card-body">
                                                        <h5 class="card-title fw-bold py-3 mb-2 chapter-card-title">Chapter @chapter.chapter_id: @chapter.name</h5>
                                                    </div>
                                                </div>
                                            </a>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <p>No chapters found.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            var announcements = @Html.Raw(Json.Serialize(Model?.Announcements?.ToList() ?? new List<Singlearn.Models.Entities.Announcement>()));
            var currentPage = 1;
            var rowsPerPage = 3;

            function updateAnnouncements(page) {
                var startIndex = (page - 1) * rowsPerPage;
                var endIndex = startIndex + rowsPerPage;
                var slicedAnnouncements = announcements.slice(startIndex, endIndex);

                var container = $('#announcement-container');
                container.empty();

                slicedAnnouncements.forEach(function (announcement) {
                    container.append(
                        `<div class="announcement-item">
                                    <h4>${announcement.title}</h4>
                                    <p class="announcement-meta">
                                        ${'@ViewData["StaffName"]'} posted on ${new Date(announcement.date).toLocaleString('en-US', { month: 'long', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', hour12: true })}
                                    </p>
                                    <p class="announcement-description">${announcement.description}</p>
                                    ${announcement.image ? `<img src="${announcement.image}" />` : ''}
                                </div>`
                    );
                });
            }

            $('#previousPage').click(function (event) {
                event.preventDefault();
                if (currentPage > 1) {
                    currentPage--;
                    updateAnnouncements(currentPage);
                }
            });

            $('#nextPage').click(function (event) {
                event.preventDefault();
                if (currentPage < Math.ceil(announcements.length / rowsPerPage)) {
                    currentPage++;
                    updateAnnouncements(currentPage);
                }
            });

            updateAnnouncements(currentPage);
        });
    </script>
</body>
</html>
