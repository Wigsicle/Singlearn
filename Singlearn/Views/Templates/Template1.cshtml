@model Singlearn.ViewModels.SubjectViewModel
@{
    var currentController = ViewContext.RouteData.Values["controller"].ToString();
    var announcements = Model.Announcements ?? new List<Singlearn.Models.Entities.Announcement>();
}
<!DOCTYPE html>
<html>
<head>
    <title>Template 1</title>
    <!-- Bootstrap CSS for styling -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Style for the card hover effect */
        .card-hover-effect {
            overflow: hidden;
            position: relative;
            border-radius: 0.5rem;
            transition: transform 0.25s ease-in-out;
        }

            .card-hover-effect:hover {
                transform: scale(1.05);
                box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            }

        /* Style for announcement items */
        .announcement-item {
            margin-bottom: 30px;
            border-bottom: 1px solid black;
            padding-bottom: 15px;
        }

            .announcement-item img {
                width: 200px;
                height: 150px;
                object-fit: cover;
                margin-top: 10px;
            }

        /* Meta information for announcements */
        .announcement-meta {
            font-size: 0.9rem;
            color: gray;
        }

        /* Description for announcements */
        .announcement-description {
            color: black;
        }

        /* Style for chapter cards */
        .chapter-card {
            width: 200px;
            height: 120px;
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .chapter-card-title {
            font-size: 1rem;
            text-align: center;
        }

        .row {
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <!-- Announcements Section -->
        <div class="card mt-3">
            <div class="card-body">
                <h5 class="card-title text-center">Subject Announcements</h5>
                <div id="announcement-container">
                    @if (announcements.Any())
                    {
                        @for (int i = 0; i < Math.Min(3, announcements.Count); i++)
                        {
                            <div class="announcement-item">
                                <h4>@announcements[i].title</h4>
                                <p class="announcement-meta">
                                    @ViewData["StaffName"] posted on @announcements[i].date.ToString("MMMM dd, yyyy h:mm tt")
                                </p>
                                <p class="announcement-description">@announcements[i].description</p>
                                @if (!string.IsNullOrEmpty(announcements[i].image))
                                {
                                    <img src="@announcements[i].image" />
                                }
                            </div>
                        }
                    }
                    else
                    {
                        <p>No announcements available.</p>
                    }
                </div>
                @if (announcements.Count > 3)
                {
                    <!-- Pagination for Announcements -->
                    <nav aria-label="Announcements navigation">
                        <ul class="pagination justify-content-center">
                            <li class="page-item">
                                <a class="page-link" href="#" aria-label="Previous" id="previousPage">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="#" aria-label="Next" id="nextPage">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            </div>
        </div>
        <!-- Chapters Section -->
        <div class="card mt-3">
            <div class="card-body">
                <h5 class="card-title text-center">Subject Chapters</h5>
                <div class="row">
                    @if (Model.Chapters != null && Model.Chapters.Any())
                    {
                        <div class="row">
                            @foreach (var chapter in Model.Chapters)
                            {
                                <div class="col-md-6 col-lg-3 padding-bottom-20">
                                    <a asp-controller="@currentController" asp-action="MaterialsBySubject" asp-route-subject_id="@chapter.subject_id" asp-route-chapter_id="@chapter.chapter_id" asp-route-class_id="@ViewData["ClassId"]" class="card-link">
                                        <div class="card mb-2 card-hover-effect chapter-card">
                                            <div class="card-body">
                                                <h5 class="card-title fw-bold py-3 mb-2 chapter-card-title">Chapter @chapter.chapter_id: @chapter.name</h5>
                                            </div>
                                        </div>
                                    </a>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p>No chapters found.</p>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- jQuery for handling AJAX requests and DOM manipulation -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            var announcements = @Html.Raw(Json.Serialize(announcements.ToList()));
            var currentPage = 1;
            var rowsPerPage = 3;

            // Function to update announcements based on the current page
            function updateAnnouncements(page) {
                var startIndex = (page - 1) * rowsPerPage;
                var endIndex = startIndex + rowsPerPage;
                var slicedAnnouncements = announcements.slice(startIndex, endIndex);

                var container = $('#announcement-container');
                container.empty();

                slicedAnnouncements.forEach(function (announcement) {
                    container.append(
                        `<div class="announcement-item">
                                    <h4>${announcement.title}</h4>
                                    <p class="announcement-meta">
                                        ${'@ViewData["StaffName"]'} posted on ${new Date(announcement.date).toLocaleString('en-US', { month: 'long', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', hour12: true })}
                                    </p>
                                    <p class="announcement-description">${announcement.description}</p>
                                    ${announcement.image ? `<img src="${announcement.image}" />` : ''}
                                </div>`
                    );
                });
            }

            // Handle click event for the previous page button
            $('#previousPage').click(function (event) {
                event.preventDefault();
                if (currentPage > 1) {
                    currentPage--;
                    updateAnnouncements(currentPage);
                }
            });

            // Handle click event for the next page button
            $('#nextPage').click(function (event) {
                event.preventDefault();
                if (currentPage < Math.ceil(announcements.length / rowsPerPage)) {
                    currentPage++;
                    updateAnnouncements(currentPage);
                }
            });

            // Initial update of announcements on page load
            updateAnnouncements(currentPage);
        });
    </script>
</body>
</html>
