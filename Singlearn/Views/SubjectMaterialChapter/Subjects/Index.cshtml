@model IEnumerable<Singlearn.Models.Entities.Subject>

@{
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
    ViewData["Title"] = "Subjects";

    var subjects = Model.Select(m => m.name).Distinct().OrderBy(subject => subject).ToList();
    var academicLevels = Model.Select(m => m.academic_level).Distinct().OrderBy(level => level).ToList();
    var years = Model.Select(m => m.year).Distinct().OrderBy(year => year).ToList();
}

<body>
    <div class="container-fluid" style="padding:12% 3% 3% 3%;">
            <!-- Main Content: Table and Pagination -->
            <div class="col-lg-9 pt-3">
                <h1>List of Subjects</h1>

                <div class="form-group pt-3 pb-3">
                    <input type="text" class="form-control" id="searchInput" placeholder="Search for subjects...">
                </div>

                <a asp-action="CreateSubject" class="btn btn-primary mb-3">Create Subject</a>

                <div class="table-responsive" style="width:1000px;">
                    <table class="table table-striped table-hover" id="subjectsTable">
                        <thead class="thead-dark">
                            <tr>
                                <th>Subject Name</th>
                                <th>Year</th>
                                <th>Academic Level</th>
                                <th>No.of Chapters</th>
                                <th>Image</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="col-label">@Html.DisplayFor(modelItem => item.name)</td>
                                    <td class="col-label">@Html.DisplayFor(modelItem => item.year)</td>
                                    <td class="col-label">@Html.DisplayFor(modelItem => item.academic_level)</td>
                                    <td class="col-label">@Html.DisplayFor(modelItem => item.no_chapters)</td>
                                    <td class="col-label">@Html.DisplayFor(modelItem => item.image)</td>
                                    <td>
                                        <a asp-action="DetailsSubject" asp-route-id="@item.subject_id"><i class="fa fa-eye text-primary"></i></a> |
                                        <a asp-action="EditSubject" asp-route-id="@item.subject_id"><i class="fa fa-pencil text-warning"></i></a> |
                                        <a asp-action="DeleteSubject" asp-route-id="@item.subject_id"><i class="fa fa-trash text-danger"></i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <!-- End of table -->
                <!-- Pagination -->
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center" id="pagination">
                        <li class="page-item" id="previousPage">
                            <a class="page-link" href="" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                                <span class="sr-only">Previous</span>
                            </a>
                        </li>
                        <!-- Pagination Links will be dynamically added here -->
                        <li class="page-item" id="nextPage">
                            <a class="page-link" href="" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                                <span class="sr-only">Next</span>
                            </a>
                        </li>
                    </ul>
                </nav>
                <!-- End of Pagination -->
            </div>
            <!-- End of Main Content -->
        </div>
    </div>
</body>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var subjects = @Html.Raw(Json.Serialize(Model));
            var currentPage = 1;
            var rowsPerPage = 10;

            function updateTable(page) {
                var startIndex = (page - 1) * rowsPerPage;
                var endIndex = startIndex + rowsPerPage;
                var slicedSubjects = subjects.slice(startIndex, endIndex);

                updateTableContent(slicedSubjects);
            }

            function updateTableContent(filteredSubjects) {
                var tableBody = document.querySelector("#subjectsTable tbody");
                tableBody.innerHTML = "";

                filteredSubjects.forEach(function (item) {
                    var row = `
                                        <tr>
                                            <td class="col-label">${item.name}</td>
                                            <td class="col-label">${item.year}</td>
                                            <td class="col-label">${item.academic_level}</td>
                                            <td class="col-label">${item.no_chapters}</td>
                                            <td class="col-label">${item.image}</td>
                                            <td>
                                                <a href="/Subjects/Details/${item.subject_id}"><i class="fa fa-eye text-primary"></i></a> |
                                                <a href="/Subjects/Edit/${item.subject_id}"><i class="fa fa-pencil text-warning"></i></a> |
                                                <a href="/Subjects/Delete/${item.subject_id}"><i class="fa fa-trash text-danger"></i></a>
                                            </td>
                                        </tr>`;
                    tableBody.innerHTML += row;
                });

                // Update pagination after updating table content
                updatePagination(filteredSubjects.length);
            }

            function updatePagination() {
                var totalPages = Math.ceil(subjects.length / rowsPerPage);
                var paginationElement = document.getElementById("pagination");
                paginationElement.innerHTML = "";

                var previousLi = `<li class="page-item" id="previousPage">
                                                    <a class="page-link" href="" aria-label="Previous">
                                                        <span aria-hidden="true">&laquo;</span>
                                                        <span class="sr-only">Previous</span>
                                                    </a>
                                                  </li>`;
                paginationElement.innerHTML += previousLi;

                for (var i = 1; i <= totalPages; i++) {
                    var li = `<li class="page-item"><a class="page-link" href="">${i}</a></li>`;
                    paginationElement.innerHTML += li;
                }

                var nextLi = `<li class="page-item" id="nextPage">
                                                <a class="page-link" href="" aria-label="Next">
                                                    <span aria-hidden="true">&raquo;</span>
                                                    <span class="sr-only">Next</span>
                                                </a>
                                              </li>`;
                paginationElement.innerHTML += nextLi;

                var pageLinks = document.querySelectorAll("#pagination .page-link");

                pageLinks.forEach(function (pageLink, index) {
                    if (index === 0) {
                        pageLink.addEventListener("click", function (event) {
                            event.preventDefault();
                            if (currentPage > 1) {
                                currentPage--;
                                updateTable(currentPage);
                            }
                        });
                    } else if (index === pageLinks.length - 1) {
                        pageLink.addEventListener("click", function (event) {
                            event.preventDefault();
                            if (currentPage < totalPages) {
                                currentPage++;
                                updateTable(currentPage);
                            }
                        });
                    } else {
                        pageLink.addEventListener("click", function (event) {
                            event.preventDefault();
                            currentPage = parseInt(pageLink.textContent);
                            updateTable(currentPage);
                        });
                    }
                });
            }



            // Search bar functionality
            document.getElementById('searchInput').addEventListener('input', function () {
                var filter = this.value.toLowerCase();
                var rows = document.querySelectorAll("#subjectsTable tbody tr");

                rows.forEach(function (row) {
                    var text = row.textContent.toLowerCase();
                    if (text.includes(filter)) {
                        row.style.display = "";
                    } else {
                        row.style.display = "none";
                    }
                });
            });


            // Initial setup
            updateTable(currentPage);
            updatePagination();
        });
    </script>

    <style>

        .table-responsive {
            margin-top: 20px;
        }
    </style>
}
