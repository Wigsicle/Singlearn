@{
    Layout = "~/Views/Shared/_LayoutFixed.cshtml";
    ViewData["StudentTitle"] = "Homepage";
}
@using Singlearn.ViewModels
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor;
@{
    var studentId = HttpContextAccessor.HttpContext.Session.GetString("student_id");
}


@model HomepageViewModel
<div class="container-fluid">
    <div class="row">
        <!-- Bootstrap carousel -->
        <div class="col-lg-10 offset-lg-1">
            <h1 class="fw-bold py-3 mb-2">News & Events</h1>
        </div>
        <div class="col-lg-10 offset-lg-1">
            @if (Model.Announcements != null && Model.Announcements.Any())
            {
                <div id="carouselExample" class="padding-bottom-40 carousel carousel-dark slide" data-bs-ride="carousel">
                    <ol class="carousel-indicators">
                        @for (var i = 0; i < Model.Announcements.Count; i++)
                        {
                            <li data-bs-target="#carouselExample" data-bs-slide-to="@i" class="@(i == 0 ? "active" : "")"></li>
                        }
                    </ol>
                    <div class="carousel-inner round-corner">
                        @for (var i = 0; i < Model.Announcements.Count; i++)
                        {
                            var announcement = Model.Announcements[i];
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <div class="row mb-3">
                                    <div class="col-lg">
                                        <div class="card mb-3">
                                            <div class="row g-0">
                                                <div class="col-lg-4">
                                                    <img class="card-img card-img-left carousel-img" src="@announcement.Image" alt="Card image" />
                                                </div>
                                                <div class="col-lg-8">
                                                    <div class="card-body">
                                                        <h5 class="card-title fw-bold py-3 mb-2">@announcement.Title</h5>
                                                        <p class="card-text">Post Date: @announcement.Date</p>
                                                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#announcementModal"
                                                                data-title="@announcement.Title"
                                                                data-description="@announcement.Description"
                                                                data-image="@announcement.Image"
                                                                data-url="@announcement.Url"
                                                                data-date="@announcement.Date"
                                                                data-staffname="@announcement.StaffName"
                                                                onclick="loadAnnouncementDetails(this)">
                                                            Find out more
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <p>No announcements found.</p>
            }
        </div>
    </div>
    <!-- Subject Display -->
    <div class="row">
        <div class="col-lg-10 offset-lg-1">
            <h1 class="fw-bold py-3 mb-2">Subjects</h1>
        </div>
        @if (Model.Subjects != null && Model.Subjects.Any())
        {
            <div class="col-lg-10 offset-lg-1">
                <div class="row">
                    @foreach (var subject in Model.Subjects)
                    {
                        <div class="col-lg-3 padding-bottom-20">
                            <a asp-controller="Student" asp-action="SubjectIndex" asp-route-subject_id="@subject.subject_id" class="card-link">
                                <div class="card mb-2 card-hover-effect">
                                    <img class="card-img-top card-img-custom" src="@subject.image" alt="Card image cap" />
                                    <div class="card-body">
                                        <h5 class="card-title fw-bold py-3 mb-2">@subject.academic_level @subject.year @subject.name (@subject.class_name)</h5>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <p>No subjects found for this student.</p>
        }
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="announcementModal" tabindex="-1" aria-labelledby="announcementModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fw-bold" id="announcementModalLabel">Announcement Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="announcementDetails">
                    <!-- Modal content will be dynamically loaded here -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script>
    function loadAnnouncementDetails(button) {
        const title = button.getAttribute('data-title');
        const description = button.getAttribute('data-description');
        const image = button.getAttribute('data-image');
        const url = button.getAttribute('data-url');
        const date = button.getAttribute('data-date');
        const staffname = button.getAttribute('data-staffname');

        document.querySelector('#announcementModalLabel').textContent = title;
        const modalBody = document.querySelector('#announcementModal .modal-body');

        let htmlContent = `
                    <img src="${image}" alt="Image" class="img-fluid mb-3" />
                    <p>${description}</p>`;

        // Add link if URL is provided
        if (url) {
            htmlContent += `<p><a href="${url}" target="_blank">Link</a></p>`;
        }

        htmlContent += `
                    <p>Posted by: ${staffname}</p>
                    <p>Posted at: ${date}</p>
                `;

        modalBody.innerHTML = htmlContent;
    }
</script>


<style>
    .modal-title {
        color: black; /* Set title color to black */
    }

    .carousel-img {
        height: 300px;
        width: 100%;
        object-fit: fit;
    }

    .card-img-custom {
        height: 225px;
        width: 100%;
        object-fit: fit;
    }

    .round-corner {
        border-top-left-radius: 0.5rem;
        border-bottom-left-radius: 0.5rem;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
    }

    .padding-top-10 {
        padding-top: 10px;
    }

    .padding-top-20 {
        padding-top: 20px;
    }

    .padding-top-40 {
        padding-top: 40px;
    }

    .padding-top-60 {
        padding-top: 60px;
    }

    .padding-bottom-10 {
        padding-bottom: 10px;
    }

    .padding-bottom-20 {
        padding-bottom: 20px;
    }

    .padding-bottom-40 {
        padding-bottom: 40px;
    }

    .padding-bottom-60 {
        padding-bottom: 60px;
    }

    .card-hover-effect {
        overflow: hidden;
        position: relative;
        border-radius: 0.5rem;
        transition: transform 0.25s ease-in-out;
    }

        .card-hover-effect:hover {
            transform: scale(1.05); /* Increase size on hover */
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1); /* Optional: Add shadow on hover */
        }
</style>